<?php

/**
 * @file
 * Creates a list of URLs for search engines to index.
 *
 * @author David Kent Norman
 * @link http://deekayen.net/
 */

/**
 * Implements hook_perm().
 */
function text_sitemap_permission() {
  return array(
    'administer text sitemap' => array(
      'title' => t('Administer text sitemap'),
      'description' => t('Change site verification information.'),
    ),
  );
}

/**
 * Implements hook_menu().
 *
 * @return array
 */
function text_sitemap_menu() {
  $items = array();

  $items['sitemap.txt'] = array(
    'page callback' => 'text_sitemap_output',
    'type' => MENU_CALLBACK,
    'access callback' => 'text_sitemap_access',
  );
  $items['admin/config/services/text_sitemap'] = array(
    'title' => 'Text sitemap',
    'description' => 'Change site verification information.',
    'page callback' => 'backdrop_get_form',
    'page arguments' => array('text_sitemap_admin_settings'),
    'access callback' => 'user_access',
    'access arguments' => array('administer text sitemap'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'text_sitemap.admin.inc',
  );

  /* since this would get skipped on during the module install
   a _submit() hook was added to the settings form to force
   a menu rebuild so this can be captured if a Google verification
   URL was added. */
  if ($google_link = config_get('text_sitemap.settings', 'google_html_verification')) {
    $items[$google_link] = array(
      'page callback' => 'text_sitemap_verify_google',
      'type' => MENU_CALLBACK,
      'access callback' => 'text_sitemap_access',
    );
  }

  return $items;
}

/**
 * Everyone gets to see the sitemap file!
 */
function text_sitemap_access() {
  return TRUE;
}

/**
 * Put all the URLs in a big pile.
 *
 * @return string
 */
function text_sitemap_list_urls() {
  $text_sitemap[] = url('', array('absolute' => TRUE));

  $query = db_select('node', 'n');
  $query->fields('n', array('nid', 'type', 'uid', 'status'));
  $query->condition('status', 1);
  $result = $query->execute();

  $account = user_load(0);
  foreach ($result as $node) {
    if (node_access('view', $node, $account)) {
      $text_sitemap[] = url('node/' . $node->nid, array('absolute' => TRUE));
    }
  }
  if (module_exists('taxonomy')) {
    $query = db_select('taxonomy_term_data', 'd');
    $query->fields('d', array('tid'));
    $result = $query->execute();
    foreach ($result as $topic) {
      $text_sitemap[] = url('taxonomy/term/' . $topic->tid, array('absolute' => TRUE));
    }
  }

  $text_sitemap = implode("\n", $text_sitemap);

  cache_set('text_sitemap', $text_sitemap, 'cache', CACHE_TEMPORARY);

  return $text_sitemap;
}

/**
 * Print list of URLs in plaintext format.
 */
function text_sitemap_output() {
  if (!ini_get('safe_mode')) {
    backdrop_set_time_limit(240);
  }

  watchdog('text_sitemap', 'Sitemap requested by ' . getenv('HTTP_USER_AGENT'), NULL, WATCHDOG_DEBUG);

  header('Content-type: text/plain');
  if ($text_sitemap = cache_get('text_sitemap', 'cache')) {
    die($text_sitemap->data);
  }

  die(text_sitemap_list_urls());
}

/**
 * Keep the cached sitemap fresh.
 */
function text_sitemap_cron() {
  if (!cache_get('text_sitemap', 'cache')) {
    text_sitemap_list_urls();
  }
}

/**
 * Prints a verification string for Google search console sitemap submission.
 */
function text_sitemap_verify_google() {
  $filename = config_get('text_sitemap.settings', 'google_html_verification');
  watchdog('text_sitemap', 'Google HTML verification was accessed.', array(), WATCHDOG_DEBUG);
  die('google-site-verification: '. trim(check_plain($filename)));
}

/**
 * Implements hook_preprocess_page().
 */
function text_sitemap_preprocess_page(&$variables) {
  $meta_verification = config_get('text_sitemap.settings', 'google_meta_verification');
  if (!empty($meta_verification)) {
    $element = array(
      '#tag' => 'meta',
      '#attributes' => array(
        'name' => 'google-site-verification',
        'content' => trim(check_plain($meta_verification)),
      ),
    );
    backdrop_add_html_head($element, 'text_sitemap_google_verification');
  }
}

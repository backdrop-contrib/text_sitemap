<?php

/**
 * @file
 * Creates a list of URLs for search engines to index.
 *
 * @author David Kent Norman
 * @link http://deekayen.net/
 */

/**
 * Implements hook_menu().
 *
 * @return array
 */
function text_sitemap_menu() {
  $items = array();

  $items['sitemap.txt'] = array(
    'page callback' => 'text_sitemap_output',
    'type' => MENU_CALLBACK,
    'access callback' => 'text_sitemap_access',
  );
  return $items;
}

/**
 * Everyone gets to see the sitemap file!
 */
function text_sitemap_access() {
  return TRUE;
}

/**
 * Put all the URLs in a big pile.
 *
 * @return string
 */
function text_sitemap_list_urls() {
  $text_sitemap[] = url('', array('absolute' => TRUE));

  $query = db_select('node', 'n');
  $query->fields('n', array('nid', 'type', 'uid', 'status'));
  $query->condition('status', 1);
  $query->orderBy('changed', 'DESC');
  $query->range(0, 49998); // Protocol max 50,000: http://www.sitemaps.org/protocol.html
  $result = $query->execute();

  $account = user_load(0);
  foreach ($result as $node) {
    if (node_access('view', $node, $account)) {
      $text_sitemap[] = url('node/' . $node->nid, array('absolute' => TRUE));
    }
  }

  $text_sitemap = implode("\n", $text_sitemap);

  cache_set('text_sitemap', $text_sitemap, 'cache', CACHE_TEMPORARY);

  return $text_sitemap;
}

/**
 * Print list of URLs in plaintext format.
 */
function text_sitemap_output() {
  if (!ini_get('safe_mode')) {
    backdrop_set_time_limit(240);
  }

  watchdog('text_sitemap', 'Sitemap requested by ' . getenv('HTTP_USER_AGENT'), NULL, WATCHDOG_DEBUG);

  header('Content-type: text/plain');
  if ($text_sitemap = cache_get('text_sitemap', 'cache')) {
    die($text_sitemap->data);
  }

  die(text_sitemap_list_urls());
}

/**
 * Keep the cached sitemap fresh.
 */
function text_sitemap_cron() {
  if (!cache_get('text_sitemap', 'cache')) {
    text_sitemap_list_urls();
  }
}
